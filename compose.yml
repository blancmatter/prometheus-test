version: '3.8'

networks:
  monitoring:
    driver: bridge
    
volumes:
  prometheus_data: {}
  grafana_data: {}
  grafana_config: {}

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    ports:
      - "9100:9100"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_config:/etc/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    expose:
      - 3000
    networks:
      - monitoring

  cgi-stock:
    env_file:
      - secret.env
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    restart: unless-stopped
    build:
      dockerfile: docker/Dockerfile
      context: .
    image: cgi-stock
    container_name: cgi-stock
    ports:
      - "5000:5000"
    networks:
      - monitoring